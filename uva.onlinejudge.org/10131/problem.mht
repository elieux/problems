Content-Type: multipart/related; start=<op.mhtml.1380315663671.9a8e553b1f205a58@192.168.192.168>; boundary=----------nmho0l6gMU7u66ezGehzjP
Content-Location: http://uva.onlinejudge.org/external/101/10131.html
Subject: =?utf-8?Q?Question=201:=20Is=20Bigger=20Smarter=3F=20[http://uva.onlinejudge.org/]?=
MIME-Version: 1.0

------------nmho0l6gMU7u66ezGehzjP
Content-Disposition: inline; filename=10131.html
Content-Type: text/html; name=10131.html
Content-ID: <op.mhtml.1380315663671.9a8e553b1f205a58@192.168.192.168>
Content-Location: http://uva.onlinejudge.org/external/101/10131.html
Content-Transfer-Encoding: 8bit

<HTML>
<HEAD>
	<TITLE>Question 1: Is Bigger Smarter?</TITLE>
</HEAD>
<BODY>
<H1>Question 1: Is Bigger Smarter?</H1>

<H2>The Problem</H2>
<P>

Some people think that the bigger an elephant is, the smarter it is.
To disprove this, you want to take the data on a collection of elephants
and put as large a subset of this data as possible into a sequence
so that the weights are increasing, but the IQ's are decreasing.

</P><P>

The input will consist of data for a bunch of elephants, one elephant per
line, terminated by the end-of-file.
The data for a particular elephant will consist of a pair of integers:
the first representing its size in kilograms and the second representing its
IQ in hundredths of IQ points.
Both integers are between 1 and 10000.
The data will contain information for at most 1000 elephants.
Two elephants may have the same weight, the same IQ, or even the same weight
and IQ.

</P><P>

Say that the numbers on the i-th data line are <TT>W[i]</TT> and <TT>S[i]</TT>.
Your program should output a sequence of lines of data; the first line should
contain a number <TT>n</TT>; the remaining <TT>n</TT> lines should
each contain a single positive integer (each one representing an elephant).
If these <TT>n</TT> integers are <TT>a[1]</TT>, <TT>a[2]</TT>,..., <TT>a[n]</TT>
then it must be the case that
<PRE>
   W[a[1]] < W[a[2]] < ... < W[a[n]]
</PRE>
and
<PRE>
   S[a[1]] > S[a[2]] > ... > S[a[n]]
</PRE>
In order for the answer to be correct, <TT>n</TT> should be as large as
possible.
All inequalities are strict: weights must be strictly increasing, and IQs
must be strictly decreasing.
There may be many correct outputs for a given input, your program only
needs to find one.

</P>

<H2>Sample Input</H2>

<PRE>
6008 1300
6000 2100
500 2000
1000 4000
1100 3000
6000 2000
8000 1400
6000 1200
2000 1900
</PRE>

<H2>Sample Output</H2>

<PRE>
4
4
5
9
7
</PRE>
</BODY>
</HTML>

------------nmho0l6gMU7u66ezGehzjP--
