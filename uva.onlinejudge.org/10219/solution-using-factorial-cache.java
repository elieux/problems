class Main {
	public static final java.util.HashMap<Integer, java.math.BigInteger> cache = new java.util.HashMap<Integer, java.math.BigInteger>();
	
	public static java.math.BigInteger factorial(final int k) {
		for (int i = 0; i < k; i += 100)
			Main.factorial(i);
		
		if (!Main.cache.containsKey(k))
		{
			java.math.BigInteger result;
			
			if (k <= 0)
				result = java.math.BigInteger.ONE;
			else
				result = Main.factorial(k - 1).multiply(java.math.BigInteger.valueOf(k));
			
			Main.cache.put(k, result);
		}
		
		return Main.cache.get(k);
	}
	
	public static java.math.BigInteger choose(final int n, final int k) {
		return Main.factorial(n).divide(Main.factorial(n - k).multiply(Main.factorial(k)));
	}
	
	public static void pregenerate(final int from, final int to, final int step)
	{
		for (int i = from; i <= to; i += step)
			System.out.println(String.format("Main.cache.put(%d, new java.math.BigInteger(\"%s\"));", i, Main.factorial(i)));
	}
	
	public static void main(String[] args) throws java.io.IOException {
		java.util.Scanner scanner = new java.util.Scanner(System.in);
		
		// Main.pregenerate(50, 1650, 100);
		{
			Main.cache.put(50, new java.math.BigInteger("30414093201713378043612608166064768844377641568960512000000000000"));
			Main.cache.put(150, new java.math.BigInteger("57133839564458545904789328652610540031895535786011264182548375833179829124845398393126574488675311145377107878746854204162666250198684504466355949195922066574942592095735778929325357290444962472405416790722118445437122269675520000000000000000000000000000000000000"));
			Main.cache.put(250, new java.math.BigInteger("3232856260909107732320814552024368470994843717673780666747942427112823747555111209488817915371028199450928507353189432926730931712808990822791030279071281921676527240189264733218041186261006832925365133678939089569935713530175040513178760077247933065402339006164825552248819436572586057399222641254832982204849137721776650641276858807153128978777672951913990844377478702589172973255150283241787320658188482062478582659808848825548800000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(350, new java.math.BigInteger("123587405826548875014395199766546457224532073946919515879429330230093035357491314216934583295011178445941552109432761532449767761892237043444942213964090091669490545661255111334533069825455607852789836451585122902099649977304226794874840601811017764137584868137504975397325925882541777117706619490238363409254589994079334626893194608016888986949684994333459029365214555784862353939102567266745712846824819004146064184543888123533464975621179287075018586481357643313075153359002713294611632614208134036650116689052585573350955360246170451786972351365370405722036294385680478287278827977511411909071460914807681131728232182991517416470483157998067487290163200000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(450, new java.math.BigInteger("17333687331126326593447131461045793996778112652090510155692075095553330016834367506046750882904387106145811284518424097858618583806301650208347296181351667570171918700422280962237272230663528084038062312369342674135036610101508838220494970929739011636793766165023730853896403901590836144149594432684204513784716402303182604094683993315061302563918385303341510606761462420205820006936352095967417183191538725617509521380556781309195429800229273803342553558164591996298912368598547771179158461351340068905647127658164836377126303774923360078072307462008554355068361448126606281145760960499187813428397924840592504537849487425060488481036571447957046788635742936714615176219148469743102979949740714485104716169664052397392602848408694007408998901127492905171514473431386633392492040661522692303043813960541966093224243809225137268851717904303214058238447936111678568236973036238404626507890688000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(550, new java.math.BigInteger("12789431970371636606966620734791313516604437860464878229575155395257656153529144509770146781023755836666984342522223668276487104935057419157191303316572641730844442916621884079259664744503530060106462229406709913795896382483051752421457376925139375918554742142277084109072075415472744773895909513758702137196402197602987575610953689410300363603347469264966415853466714416517106192691686307844235819017453689676147932595660970929967849662850819218511729785674112672060292399838490165441610219748228446647425232921460703278692195195847697533241956313120785846547163235092917482532359051896586210089077294749582508285049484663787958625020980530131323181204679160348188706036451729960518083706882188447889350237152146357737869092593947690666727221650010603370946666527771527829457588458617616446849399986511076111149473502989094186304825578814910534550257292205131572031477494708772675415889553705144186548105284431918085774927996276689160184310528173544717613694883990736557970092001258571125051431679481241244220771782038166976978235511761290071119920073750737107923959546182699429453914126446571813253916678812348394285504902069307310080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(650, new java.math.BigInteger("808855367938814487901733096865914019205293338297678269534042057967872382741596102902957956949658224946818244573136646116729387724720851917119299891882674988330563091718570045409140297453507345518932328927806066803893757760542609712910958303005048237876145463851369271382530221053274616881303302145386540230229044389778613230132116946294993283463755881928289061217694065972936351864897920565803900689052636797221598211921027495050561722781978603567070854240527647711193955496304787959374477175130085566987480709204688600261124413709715105849832795945891512227465199401434098408034429784496264449112679676171168536953761152713359399745406229307456982385928818320450175261274654100417773550346587173578146865367997646662703503687433303371855222918267606556405295894451269034669264539133036433719352817319177898952551883779077522133301705155971843965909366342084543531871172437743005022407508337039150294224890115630546884860989842324728719155012865095557594091232934696557889526353516774344683733932587802653648816746210910169978512469175166337552759222117119373563032246434104051734860385567334994985799671288210309974177728339684289722780130733769546344903093227014280052752140785120385473317412980157137649855009652574806853689654184271279590697530122234248130246277025820644096952634963880104235705726220463399086173194714179684687055574725527040839314828076347978481585618571277369344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(750, new java.math.BigInteger("258080348888515099592332164484462756339873138465439573430307783197416299243027155954177662782377988121786330241704205895696623863512136060073312399642903214981208677314332718179153141978050966912949044667285654509382893505742607320421138132489315975231024810455007561169027261467512016768219520949535523546245854587488300301587183831771306983230117702008541840588049868016262367530942050459679189959463016758263347175105682443459003758959420242420726446706871468610625180427774309822202013596386312335770257465620916795856541100240403653418300558044035800114916334162467899218825148943236293534338393691010564310549992850783040465739751374426786747138626367579170192142097000349188282966355601543364983866957807309071157224340301273138290328107224394242829508399720499754226069171146720700234961415691287653024650299449906791576444251896485737971148164303644519711822671071868913869053620498919344969212998198225423025504218155127792386786458610552302642301073848826614379519325627718818344197310234412241124626537898818059135881858620937671892189773976665326097756916365777800910711964674956323807152975316097362834398899617301975133152609071733317184179899830467924960162542548165522288593680830726827471269664435668435452031231830173305890851437975594409695453191272723171217148965163615764918779939588269561484233990603264734628306313494325446968691199021480680030775923198882305274863248464494464792535591126770493037747746544723130922945086462793250633576961329623263968229991681219729167736126795908539581595379671619786936503310162538854374487828471187674691932819466467181689212704982380869534574016124715756846188037238391662694608404480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(850, new java.math.BigInteger("52434751522060149269696758009111366494594006149283971551118518704361064639661011262327769680210270052405196789850366740433480742081853431690138814839247096312393098508601663171386622962201449494651694232294447165511801941404582111464552094033017415943152746288180465697972482714766701591182776216378597637016012582764527433363037287892386862534832329869493630145056976279925089778568129223896723943726208653032142324034536572789642526321806670350536480306386368965235792938094052619043062279200034461909662659644715276464208734165308376421949092803856758485655002021778099766423867710367686546929824758686012182151711995787180451629947989146012205816113744470064708414219977196164631499964008000951850939258339564511891910398060268276013762043871926479512145831371595571110917409056832667807316192358533958394070679772271820021868191654916620301175626835768814020539849377076187957445596808496816129504158502747535865973794881108960340739390678450182138952905327009033144549204182944190726448908375315616103345436087995653045435599224049528612567535795030792844982897054580506057039993829915685767927629332533940347487616012667168803197548947801977835216402520738480065118183279127637818623686905610586664383329897386939013110789743070517678651885587725304904508610402304772153223711105259316121049496321865144282157818047120879216941256603813678497183544129044509039398293708587786560053731032875058158164051063451298070124761815230958358012143425773359913132522992524394805233859331492384358089563079776173145551412763094214205775261013470862322014291092347097789939426389853465446167342852384678371012511930619486647496230261195953669456479102957165888556952780345846999479870949287871472990737616334055901217768749339532363920138424388739881666970285291169557663861002810994628287424621939375705886304878648618320794176940303471192571537789575275611190961555723873917220621504066742556810645542400915375390720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(950, new java.math.BigInteger("1398482541782935643804076691560480889915998440155817289184424361471088554831945426769627793564422182417055106164687328968800337838015092091902426708062585754575758761840629101148022202088616791912489053482866845368492689362680348653796205483555373854592456218070694691705525740396798705940868646724824284207093151611109576110720548444329317710216110647877991896226422491521850828595540404858022075949677336135888382223667261520227307746590278225849364822818688836257463054227780939230451103538710215851987205677537048482160223572199279284117451224132373001283371301327748829720294520197304170767712014548861589250006845399476495213899063451656157650046959183486755881486521917991465353136174132572085159554294308742343997607375110074558336621161865669641233890984526944612898577907685789137489893983148709227096968737623566896040242263207335675963585922754508701637571117210471564252770570750986133957864067854642461333055446897356256150227759705161144342074998081690812845683437831834697577243723598629942007502158280264176806534264401532973204717702416909416881338635446682316115641175873267562660403190728153051309523731329937953128064805704669965310761454031007380577278555676647463602920304388801983631722813659620707911156485861041283361984654669874236982608585132243947301552513613611220015558453448924690739929122514945064605460031495266893341079448598602888778912070021944443316296980075190303839112675319752345427865151848929296445310091170773808682347150322723856486107805316543473255318746117468843202152153020851636933294448384581108333226009129599161980428471679024129941277718802294844225208011510362580468464079539685857597219536595114366720698051081028644017686258454536950017818406904897903310294734749680357539808121993820966632438607133926895767650158824385429998931170890049739411385071900802105888683110544033206102184261669482758401109754069003250076283022582711306994996277879328045961071730358543540500962142907125663566830842880290774899152437963716454512427624332124652969580549126054320287541325135782164668167493343515686764514235963736449314315122164198258363850671212708602703180299255302930935371174390553238003525108112573507911441672412518463779635200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1050, new java.math.BigInteger("1410188200745141400252996925676992827609427883860681102196565498836336759274700571301062342565763667730574384945641799898255183843797277503390234956935070394479008695945171075361751490266255689101148400638952696890761606725201668092011058223584197411362725808136521522042355331881040677201517524336650583177256411366707450357076114921552137231355444540586815705134573123811035652300829258848866779288445345880939714666466690931600352950947986039996432744118754275201288974846584827623137897792122234828866268708808373651276334848174069438274783771825876627128631153710955178645802336438821598373242525172486367974756812461614902930111917189057714749908028994429977492262359339566774968421933826661845573051906637774350159842777201017432451096856729583848901554363821690871963837317325736243872364148002548730698225622458872512196920911448958125730334065147981692621576246557948729307409911196659268977449824737887320133166571859768610902901473947123457650502571110106359050311523447786812407139365812881583625481044458877349531018685432954716465488394115659122958734526255536933591914359738150594232473711291251674238772555271930793815825985192385373959108468804902794091333308997906654387218990210896432316359969692946647542629459647405723220544167040523889230769503152154177529658591214286091920818334885793018545403374623359640495796839709709384014013012687979103444399633192318216277501509029976296018451103357572826768431048432485483904156377949766394422704783101532471054714207760435511464546800957250453788222377134546592645406967452675959535949763038875966331731971129199721214052529127807792669916640919732183579343359239597918703189536631735584104688709458017493330567389003035699210216919159335873580170482127718603055097898778534952746567262220574405875417584645973964359858336242322940751239914457356958486503721361054938154425602356741007273505642819375318812777259929805604278204113178492040885487253497253599744730743581176164725418840085566636342828519091247494824276253539056065078460524088183488674664479782491935751641451986001983862705359408369452209318497499455387591386320304376709778016052197826525984538725046076767350582105555907369126126599357472133535283786257752742361071712371083162246333227880188819486706970859272715412889313443305257503562357007473653496252819471178088373765780168140628517776493336902711979149445247736765162103192806316969933073702060508523674642586433795221440274867588588796999943822914833791154288328704000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1150, new java.math.BigInteger("19648642137842380307956763306201665863364220936195940157444080090443814164067525353474191815414024654617533895010804955710997797455664567614064492723017499486623446170659595504250101508066953860977971628495790114655683720363032790669116896567494902097678820088421504484122805169109824010944674170642780357818929710882918261028497580258873793084140350528254628730657202330094069471905171896437750462193920047112322773016409133094167656734178099146284828084926137526100408978315001419845264436955425033500591517865003915855061181732222844567544548201986459709610449892528048632127904074359006161705089791438518486455725802497942870188220276275899362507682882741630931862132250756544092339000502958839695616454077276775948239368702805525835041895908583498940806054936206671621441513033285001894946569801476375328729902265158789559625218278523247554308618655698507345199772723589812461659917582605515009968094228600361946816138838840097666346774858543352412694602767391609119064573986683071587289886048635142458246633392822999568612943920958373479466601118837372562457680324054194014331692872650232222667374192769062182561242309603363798150196590967881422265756246271871665727894912600068307655478639903119661240237338847913919762162101049277817977469089639451808071352926857309348462905044289663497112133156776894293075199014611052075072769154034921139658354968847879414826770041651590867424246704535312726714504456208792456746507312593022692619478398937815592254721736521858977844445187571587496262123444938119146978586692888432336960874912708733578133489726942039892185063891674909224637790615161852379895697611334947566344630108879028710758253872873717326639014129642023165385552547890378966368978081605982883820722877422189928306769846380409214866980721932428575641972818302607128595253877844876957493126128159226641037587655733946830209376209582442492156403170496560331564410527221378530433493400671085444232114412346027397882993470015543205412994974389952882790765960093896535494271137221622464317106695298639689804725014600978774278461883413051181986018968103650569791332952586436813697205624527948468514524901956195944674706118032568578608578208909455417119011950858542300383317372442517656914805802402476310997972946362364538576004999703085475681432648454140698666216878048274322023733965685803916777450983367047995189824300946303718658471963156754150651532490033633387849621395091622305343912406788604457118867886566112240402799288598138554693139816418689269969955957584164771964765596101941036995291751197488376769778621553470200992303336388094768595193346340146595909175292254151342629252417805371448741340542253641239075474844014654186371290786263076330297123725321790657910732150109335919268119933389873238018132284311716495360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1250, new java.math.BigInteger("1648115996571624863388602136766882725944059967648964793250067209785692553325901409191840481677163214952289416028196111834371101121071639091433827337716758960675189660605730115637305903447917485669445552653382573073455261898416595624967209505741876334963792358949201567873785999258571628162348173802047612024323935544587468224471448945009783911795012508020803588043497018679080207187435637689897460334863091636452294585710503752279477393407242633257813236262662004224913027316774908774016818350279607701311099745074882842699493105149924202905420803954482203726857142849097325701192174108405349194900392899324086669290020559454614967919858791415694796336675628857125939252189179855819968901048381116542346399793512538305285416533345499383675427821701822289776012462308867392706627903324874913140799542811027997894269215278704569622999922107717991742095193262115996944712418266092844762859215260723526685426744271002585004085860647133638612910866113654084333483623923018264631563643888132808540241915971202866025198761375751312534227355704911274195915827768626221532603486294576318340415878469074191814435081636064204332278942377171654341772125116534886409818381669117071273126804935062410199391402358806472433854085742337824099922411612677965772397985475340119063372245228288398741143192562644442138134133848167129912001672165592719162828044620168406014067974743467560214527700998397629838558727768967971407337707124201736714947810865468903876465812546894632437782617409360490511066212559600814181987896611664249154215232876757263147974262827819281474651000351962763596910733581300300414023210105317104984053281193747574730040534955801296005933536071756622148660418000283148330255607554516671913090409499066305063934475327811182203221464660703500437874546858595281440191373428888637550023079769062350859613936834405630571509819817131601033758544807799428630589792142258461845351120722108071719840636604547095690604979517227435093321382063074425418978643549196955353296926523448711985028718742276150723728129423671645655529281706648662761254651187571439428206216996275573363358533801380698189229183130956709539629722202676097845886743605451124686938218086531622743844717493622358617539930609065390060607908790072179701818177467749916584173694416021629773600667265025075936515694174834288693551507436569194201650622708525655486414794245849936523640966285980349457922926391164902939759661900196584539231375475655485704538184749927716224419061643778159447663390007682396238599501403491507822103874899320348603726365327950514656382766749869128206516489176700033395695502045797145123093322295913614279134868963755583769512646283008811470193836235313811319173266275368334271942337007313209174523553846042348323105898362898131305614330308506559735964456683591393659037186385880053556520686404414323651255890939896174362197696839321918669516162333203425571603971952713138321323551830753654631903164295868533458071200207630102926254404015010856595094639304134606209116305636431182225511116122872543478049472019202902551349545664512000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1350, new java.math.BigInteger("414305334868008212428884140235871028691698487635707386455261489604201752639418980422514631686218607398094944357735404824128161654983341075787274303485908618256074553635586979010545593557058559828436575011704152863020335700414840169784392947210564167159988892727650983942394883436444126631972255715592232838002992796763718802613075311802284876805092177545804339189656206523139644187086338579004759568928091071876645258805784914859358369269052534483259781071534693615979571073308813189192258300322315066431745742945557068921304238621632772073046615172044349972117136549131770344983398069318304728833577046286491356692587160518974850729812284320368884132565641430398182446260837605792725685202627072054750706900617623386792904219725570887195653817678492498918804940709059590940129285587231776942417143162342375498254445337935346008299136923308303353594764847519760963530732972210830063898364075120074740467285811737974597285311989088735831580430188500685905399742710933748375956767601642167177450118679577789918079703548976065001718053281575821006594611589916907640858178702236866656794847798878353274137968426935184826254147212884265415989001814244020234101034417780376924502367412498540568612150740004946859080810214367868942203933218513035722513805154893473132242196395013294702678652990782225421679155091756008656280510752657107012546121440886085350358188434022480272964072129901090294359197664503010136069587416600656400176833209532711765960611998532472905183569764993979125223195337965812683496705712013637737886690114601551773750686343337702735963405213845341192880382097272517110601284807732413447813666045244474225188173038148855698144365116540039137872192859625351235931788181173217758250945339102122620644124031750956321397052681006679444842972089882105975106077220632816558132897224541577698564186977809415224318000061458430040703946136466246757575650559193815696138473994294055653388254716699977703547510228863703941694934984400061977606869703761027701932073898825126114606653484689644541661162172874661741593502940229081231848889917927149328276549135217747437010760170227950570137817665917448532040535719288004087536219577469145891273544460775844634087447471563330683968629063627258082628548535610943438469850941103558918532185692056029682542450792173772176206817879379675073305186771677080216708882942308937153998871218321647832603722011488380498299029397804387929187957535176177147969236840343240902633542814479211423718249923264670798360771240168339500627893655308304171794161217916400757701738963723791619777472884981022750965755077223524814728029347016256724894401499274555008258666818068525125652487653303447844809920102951201467962920689489740289589947248564846686754812651536842063608483582878607782730157167479380232808400808600074712856757774661985316327348336631433707962789714883734300145222968017630582321142018097771258447540514148411545825078950279417665923252209127595792897350138177777195426711158404828079289975316287165445797828326068324075385557282552409653962820864018679025348825231562014903681775639781693190280308352017653654506783820244220270945878419182005063346990560676214648876507576454439076080099207187007650534656921952138677421436428085876532872817968399721796953204543988038875390357848204067220419401516371099806735884920149478516676702869100008025940052410368000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1450, new java.math.BigInteger("172346860148554771021165267744392275334699374604121031867024955585491997113310741303678035542668074940574907920210615052277412970877875883086542983502780248860296481449549979009428091473532206813502141962626394934506776983929345194086552757314447490084046030379392752030948022052829853060673600334805242185919489553260625811350311138081801108386832020051828875209978897199343443935337323352446044897818044586049919983971686598540601589279253238955535929978717908378182350076691514615150580190573529719903206649724636906644139715226168222867357824421463074319978209620885207980957431537360256164755544547103684906193131503598017926247119909246134456827514172509215341869446065231653703287229784906395776196988487247034762816653548801199867575034266135956504466066375558569789326626966947014571614281110192001625787290879357514938551412472581825132772022916306493294667302159589323802596180804815625401385666134225698740661289994040862977949486384112233296688185318419226176626743503073484817279758275261057536554362915678907260598814816762293642909542159402974330324958555105832368406039312188632674921310078992382193987799395911860551409778989549952334702640324617209977196097457826610155082626603936170305008857915115486066867387630633868171793012899055008192017967811045982697619872742857580826320483761834762511382995664612406787013337630322568319189062224737289844785275121596071731045696119158396909275031524164226887575426799743382144860949855524038272371829965166015959369591294595163138520843847862589022596165029634900069284752865069164512667790029904801189726327013054748617685597646279601883147641276882115483464622010583820095551737609253101174489758723913202499462243049365550843001413550033354691298543879216515438673840129822512239947862775678130562739737279213472480475810802899146906554953350797786483913295013986682810475010853652227527354454746604139696967595636742505394440685556496722012874157564402405458373359342509438247102534420055815396963228193018880485982401542379850587750122649618317390862721524508040624406484221659373553640730717259498685210259102987651605529222239935654493854819638384007873732886261337238189216749647258924868561929183745455501769583962749437749336737684799914484938196370092276937302198385010809020973301335547583594495361140972366874127240763626376091951944314051583194415404364595031017470969006551568373596773009481271772887096378652844158140044292577328750724265951522443450647949329690631933508981214124866533373606222400438312881632859210699974215385306801774951220807235811060004184863422458072277867679728224202410344818294516771470764813444899504608265563378765433429233061867867676537476309966262042953113226473366184123695959554989588148814660027429368398727493846515815181338360789491475762135334102708961700775941902183323290830739335602096079896162795028321024134596522937426823545929315257069671598632893916197907120106400390225026897000806737866752219219250040482606202292353054528362424794457628752638488334457917955958511609436413427885096829956574765029627351713952940603037731075505577405223536591898966618387732557488306083126366575794394655046277807763502229467907620349281759991915823060194477484215843761561217183873189072142603696085340763860042385767654569739176836492024135215015446593610166994137753927495736888669767724895986996026878405559770233503562747181101481289174587691234050583496650542540792130393177204745525375321406202172657207515272061327726055964565875857747019964937966420387947043094938814551735211595893357668859193560820866813748453485362064282464925976313614227299624707814204249367755785020375040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1550, new java.math.BigInteger("71115512856145236107664967727509046083193211653746748227098196542702845042801663156155926767098383136903633410128548087816659268210019764379430822801067441182801974417686068672297459189102730492736806331177373413636267487121832869184819574693514981732982972086191997273440805744741435737193147897878436023652769541205727798863913681401612887685246034390637736414576347957803650828118469317748664373369810485493345594683285461970748285452406476906780891183402674517913851109762470188667681330581646826341882109562198809239985904433589439291672239086875276203178882266809081478000242560253807435221547868144508880911466892540557827383299196703602993400331983261750566101548959075652862685726390695465232741747580133636018797346856397484507299061625318836980751018579185452127381249656591187083315835866739461103381028314091408426587129603835294248383354539188398160696085140476351416544522676520970096565397190748361103993955646431378280227309839027808436685387268120818863309324046274417824246903807455440938815906062204817010535840828694340406286453055636584144891059873825566876350222818699692565133255878370737259945452249796881841652083057562089135373740597271936309448365702898258285604958632610762781643697677713131236576754130929445140431781542474276068977440781650806429906056174668920518323145518796065638595547761927127214047156216924286362072549919001020080774966417846476582771179405611622690301781566328491952067243795015933892606375160071825351527028958719437826175396901469993989177135482958083565284685781518189550592011230247159753791664150794764703654063982095280354005094019848304072224607989137848805192083777632539013677768023469144738690344785267260034640128161087539098870628074423898164299838103858207670354606784266043963015331670052927646351532937574088742364500532774476485022071558188182565649341615614099810503824790522328219250619391868740033468304462663218938463537205501605094400744939415461330689610595994652668704944880733961352320828398382883553483644303630372191222602236032123300842251713008162795765893472407260289374900469882633918818560090754722449192309969432402904662630930095765741825638118226100287364981711981845985120402721136236286817021137918683609987447114586590482741037955160172865468308830560898828451674975104859397602963116227725120200170482865786790716881766831768728005922825296704631928001589028462994973331342898578439460855062178726083270302071195425147938692444633242642970256427015120372772585125617479243658702279285401997687162460330378410926369848109727658025549016370395275993991364747824458224798616420719575400559554969644348927700185256544645142661753014435840882776727783798848210686765212675704763831178085357658900565982287501182722187523208527650729036683306832455813916627902933762008024891227540710113004076266005933244184626171579645618218833576172394835035733755345155331218574375955228079342916353466717002880926834539902389618739101912847004630452334272942623364971624133014001663821031936466121552306623112637321443169724425456573026835390914279962808745617643489341073139913970128249694705060219856611256163443045633823991767387671094102994722720500406627555660815223628229358290751540240099895088177990564472739236563174798237036091997996880242740469058458712599457403160644448544630094610290094439320576717091163800593975893009827666791953657786311728062157540795710639370377269294358748713436443429743926167599351199696607014969459187986349863507113958797508949478708789411567184902616177309969667084677924875861193725005630225000114800240644267598286389771129634984478862130621389981345768157073400785290267022560089962213006164796618916424474997393393624211748084541647626756262736697136087511427081102348026952823392754444858125388922196972892485859417075385291664454806384258022854150859417549403163742292892122657590283817044362659395398645080233813587704257099093743163910163617851069488916891644723200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			Main.cache.put(1650, new java.math.BigInteger("18640890396765967547287906700628409154865073398055342236356237431712866206230103057751119634298497210710185221408401565234336332923493460142835518895979702959684039147096623004521778243656984237381648482147921354403319689485016716691173102779868369693168408626490522780675214008016169600091407084426022261847681537656690652942418520371772473293293866148828524932399126787796676353349471467186698010244828487309437973159625549674141126809476391107389486037842148953250570821259171021390999975479785128195457060199792369193096944912875438864664513930974066253323249449928009229005231545079864348853338192387464828910857598422166620161670183142815861838816532181725624378097626503805263335756691902895985095175941132885761236674664743059164746637369822847441855244728051356844181100874170957789495598281709280428568662100900932586933096997402355929772782934476385332110032168531224528316964016616652823245613352362475589314336998901454018363362239780797323376556909686303774072818209652747203653778769050380022712004190713377248418877651368329816449072075702130796919298523587733248755341545547615406706059844398139534552643312505632258626831571827019857585970419544606154629021654376761204825433470120797463557389012879331465155300909739898226675313588512791869029003651635170345700778033849570189476681607840314110654789880764224239507261760644528762425221235525653708551335116914723700933248721157425308530034382604117126006141154169076401555498064370381725169233053903265820721830701507284228391024110071189697370117802958811681643751596818821543724645360352371495999285729727222732262070204038523253477742498406294974531490273719672036438185595130022593331219470657749448831295902554441405971730622865378917040618793983743209967360149566529041695119430116008513424875631946542346423207561446396045111331570644463570961081747328173270626640746167975910187354963462344188055901071669194158381049212111841745659715993035737924409786210485462319438884268936197836908717683668002708759121449321477433229322790034466670352176443145164353387178287701956989447462407059476380813278116762682122370631956562859459352686577636813482645698034100926785278641054114872876113920575921916700271189968239317165900210524811857549712943833710588007283229557142932554997211346599053256650670184279724087923673014213033337290836203625530532912007471193279335686476713695238725274375944929596517400802305801907497063559324550086982776201819013587598276728047981330418196292113766279554202440169061044221757233043350164692664562732487313682536836426798440894776437213007196286408590086789837749128438516997812641378786639767914933043580008488681108351823083424145036696055847750448380133744944515396180133150419648303357133466064856314238888700993761299031935641276225987928296678441628006403758369921502892194717930174174858677279920234096313566023496268655674721897102654499085467796439263806335821764302351162695409040396666921285147262456945113085619251372245906984350485789460162509589214303927580770619949575547286462571719598369142410713779210799389448540532126399422309877227587020576499281550371965748554619155459848236931556403974889913277834936169728821485150652119336063140101074078819054636202312900838458570045695415135008082869471433022872857592228995489408635568587889278607128524552433542941149182370055224291939449607256868644568469512929388310504305370311915577284172484119909649752347009453916845759576304763159642216491077276068116982040957993640108364484587422782186154436169823123177986915502585565275839277927480501497494987300725725702574060078328242549652418030264131276781125633017530510045582263277359926294332069602098619171935948423119653308489658719235323136739594062167167611986146534278944345398051619748308625774729467090865721662461234888983617566590607418630641521722334152578142898663685778494232192461834263549694686166224487280617256377026230722178715379506928857164586019488553441936343209563908728404496175387296856820390217901994511978135377667796533894880418445127632505343181722072343963958391855467243910383842653568106510425232493124437120326061737834626657435589561157395892056813220624382867620806971941826894227804609577906233339376451692603266795890016256000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
		}
		
		try {
			while (true)
			{
				int n = scanner.nextInt();
				int k = scanner.nextInt();
				
				System.out.println(Main.choose(n, k).toString().length());
			}
		} catch (java.util.NoSuchElementException ex) {
			return;
		}
	}
}
